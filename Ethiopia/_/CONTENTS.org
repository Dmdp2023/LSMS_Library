#+title: Contents

Brief table of contents and todo list.

* Files in Ethiopia/_/
** Ethiopia.py
Contains code common to different Ethiopia rounds
** TODO food_items.org
Should have columns for each year, with "Preferred Labels" and "Aggregate Labels".   Labels for different years:
#+begin_src python :results output
from lsms.tools import from_dta
import dvc.api
import pyreadstat

Country = 'Ethiopia'

fs = dvc.api.DVCFileSystem('./')

itemlabel_location = {'2011-12':('sect5a_hh_w1.dta','hh_s5aq00'),
                      '2013-14':('sect5a_hh_w2.dta','hh_s5aq00'),
                      '2015-16':('sect5a_hh_w3.dta','hh_s5aq0a'),
                      '2018-19':('sect6a_hh_w4.dta','item_cd')}

itemlabels = {}
for k,v in itemlabel_location.items():
    try:
        with fs.open(f'/{Country}/{k}/Data/{v[0]}') as dta:
            df = from_dta(dta)
            itemlabels[k] = df[v[1]].value_counts().index.tolist()
    except ValueError:  # pd.io.stata can't read some versions of dta files...
        fs.get_file(f'/{Country}/{k}/Data/{v[0]}',f'/tmp/{v[0]}')
        df, meta = pyreadstat.read_dta(f'/tmp/{v[0]}')
        itemlabels[k] = list(meta.value_labels[v[1]].values())

print(itemlabels)
#+end_src

#+results:
: {'2011-12': ['Teff', 'Onion', 'Coffee', 'Salt', 'Sugar', 'Eggs', 'Cheese', 'Milk', 'Meat', 'Kocho', 'Potato', 'Banana', 'Linseed', 'Wheat', 'Niger Seed', 'Haricot Beans', 'Lentils', 'Field Pea', 'Chick Pea', 'Horsebeans', 'Millet', 'Sorghum', 'Maize', 'Barley', 'Chat / Kat'], '2013-14': ['Teff', 'Wheat', 'Chat / Kat', 'Coffee', 'Salt', 'Sugar', 'Eggs', 'Cheese', 'Milk', 'Meat', 'Kocho', 'Potato', 'Banana', 'Onion', 'Linseed', 'Niger Seed', 'Haricot Beans', 'Lentils', 'Field Pea', 'Chick Pea', 'Horsebeans', 'Millet', 'Sorghum', 'Maize', 'Barley', 'Bula'], '2015-16': ['Teff', 'Beef', 'Red pepper (berbere)', 'Tomato', 'Other vegetable (SPECIFY', 'Orange', 'Other fruit (SPECIFY)', 'Sweet potato', 'Boye/Yam', 'Cassava', 'Godere', 'Other tuber or stem (SPE', 'Goat & mutton meat', 'Poultry', 'Wheat', 'Fish', 'PuUrchased Injera', 'Purchased Bread or Biscu', 'Pasta/Maccaroni', 'Other prepared food and', 'Butter/ghee', 'Oils (processed)', 'Tea', 'Soft drinks/Soda', 'Beer', 'Tella', 'Green chili pepper (kari', 'Other seed (SPECIFY)', 'Other pulse or nut (SPEC', 'Ground nuts', 'Barley', 'Maize', 'Sorghum', 'Millet', 'Horsebeans', 'Field Pea', 'Chick Pea', 'Lentils', 'Haricot Beans', 'Niger Seed', 'Linseed', 'Onion', 'Banana', 'Potato', 'Kocho', 'Milk', 'Cheese', 'Eggs', 'Sugar', 'Salt', 'Coffee', 'Chat / Kat', 'Bula', 'Other cereal (SPECIFY)', 'Greens (kale, cabbage, e', 'Greens (kale        cabb'], '2018-19': ['101. Teff', '505. Avocado', '705. Milk', '704. Fish', '703. Poultry', '702. Beef', '701. Goat & mutton meat', '610. Other tuber or stem (SPECIFY)', '609. Beetroot', '608. Carrot', '607. Godere', '606. Cassava', '605. Boye/Yam', '604. Sweet potato', '603. Bula', '602. Kocho', '601. Potato', '706. Cheese', '707. Butter/ghee', '708. Oils (processed)', '804. Beer', '903. Pasta/Maccaroni', '902. purchased bread/biscuit', '901. purchased Injera', '807. Hops (gesho)', '806. Chat / Kat', '805. Tella', '803. Soft drinks/Soda', '709. Eggs', '802. Tea', '801. Coffee', '713. Other condiments', '712. Salt', '711. Honey, natural', '710. Sugar', '506. Other fruit (SPECIFY) ____', '504. Papaya', '102. Wheat (Incl. Flour factory product)', '503. Mango', '208. Fenugreek', '207. Vetch', '206. Ground nuts', '205. Haricot Beans', '204. Lentils', '203. Field Pea', '202. Chick Pea', '201. Horsebeans', '109. Other cereal (SPECIFY)', '108. Oats', '107. Rice', '106. Millet', '105. Sorghum', '104. Maize', '103. Barley (Incl. Beso: roasted & milled barely)', '209. mung bean', '210. Processed pulses (Shiro)', '211. Other pulse or nut (SPECIFY)', '404. kale, cabbage, Pumpikn Leaf, Lettuce, spinach', '502. Orange', '501. Banana', '408. Other vegetable (SPECIFY)', '407. Moringa/Shiferaw/Halloka', '406. Garlic', '405. Tomato', '403. Red pepper (Processed pepper (Berbere))', '301. Niger Seed', '402. Green chili pepper (kariya)', '401. Onion', '305. Other seed (SPECIFY)', '304. Sun Flower', '303. SESAME', '302. Linseed', '904. Other purchased prepared food']}


** TODO conversion_to_kgs.json
This comes from data in =Ethiopia/2015-16/Data/=
#+begin_src python
import dvc.api
from lsms.tools import from_dta
import json

with dvc.api.open('../2015-16/Data/Food_CF_Wave3.dta',mode='rb') as dta:
    df = from_dta(dta)

foo=df.groupby('unit_cd')['mean_cf_nat'].median().to_dict()

with open('conversion_to_kgs.json','w') as f:
    json.dump({s.split('. ')[1]:v for s,v in foo.items()},f)

#+end_src

#+results:
: None

* Files in Ethiopia/<SOMEYEAR>/_/
** TODO household_characteristics.py
** TODO food_acquired.py
